<!DOCTYPE html>
<html>

<head>


  <!DOCTYPE html>
  <html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>


    <!--Font-awesome - This CSS file will help you to create the icons in the modals, amenities section, etc.-->
    <link href="https://use.fontawesome.com/releases/v5.11.2/css/all.css" rel="stylesheet" />
    <link href="/css/common.css" rel="stylesheet" />
    <!--Google fonts - you can use the following CSS for the open sans font used in the web application.-->
    <link
      href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap"
      rel="stylesheet" />
    <!-- linking my css files -->
    <style>
      .card_image {
        height: 300px
      }
    </style>
    <title>recomendations page</title>
    <!-- scripts for map api -->
    <script src="https://api.tiles.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.js"></script>
    <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.css" rel="stylesheet" />
    <script>
      src = 'https://api.mapbox.com/mapbox-gl-js/v2.10.0/mapbox-gl.js';
    </script>

    <!-- <link rel="stylesheet" href="map.css" />
   -->
    <!-- <link type="text/css" rel="stylesheet" href="map.css"> -->

    <style>
      body {

        position: relative;
        width: 100vw;
        height: 100vh;
      }

      .information {
        position: relative;
        top: 100%
      }

      .city,
      .slider {
        position: absolute;
        top: 100vh;
        width: 100vw;
      }

      .city_img {
        width: 24.7vw !important;
        height: 30vh !important;
      }

      .map {
        display: flex;
        justify-content: center;
      }

      .rel {
        position: relative;
        top: 80vh;
      }

      #map {
        position: absolute;
        top: 120px;
        bottom: 0;
        width: 95%;
        height: 80vh;
      }

      .all-tours {
        position: absolute;
        top: 120px;
        left: 10%;
        z-index: 1000;
        background-color: rgb(247, 245, 243);
        /* text-align: left; */
      }

      .marker {
        background-image: url('images/pin.png');
        background-size: cover;
        width: 0.8rem;
        height: 1rem;
        cursor: pointer;
      }

      .hotelMarker {
        background-image: url('images/hotel.png');
        background-size: cover;
        width: 1.6rem;
        height: 2rem;
        cursor: pointer;
      }

      .mapboxgl-popup {
        max-width: 25rem;
      }

      .mapboxgl-popup-content {
        text-align: center;
        font-family: 'Lato', sans-serif;
        padding: 1.5rem !important;
        font-size: 1.4rem;
        -webkit-box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;
        box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.15) !important;
      }

      .nav-size {
        padding: 100px;
        height: 500px;
      }
    </style>


  </head>

<body>
  <header class="text-gray-600 body-font header">
    <div class="container mx-auto flex flex-wrap p-3 flex-col md:flex-row items-center">
      <a class="flex title-font font-medium items-center text-gray-900 mb-2 md:mb-0">
        <img src="/images/logo.PNG" alt="Your Logo" class="w-11 h-13">
        <span class="ml-3 text-xl">ParKahan</span>
      </a>
      <nav class="md:ml-auto flex flex-wrap items-center text-base justify-center sticky-top">

        <a href="/home" class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base md:mt-0">Home</a>
        <a href="/aboutPage" class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base md:mt-0">About</a>
        <button class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base md:mt-0"><a  onclick="scrollToBottom() ">Contact</a> </button>
      </nav>
      <a href="/signout"
        class="inline-flex items-center bg-gray-100 border-0 py-1 px-3 focus:outline-none hover:bg-gray-200 rounded text-base md:mt-0">
        Signout</a>
      </button>
    </div>
  </header>
  </nav>
  </div>

  <section class="map">
    <div id="map"></div>
  </section>
<!-- Places Section -->
<section class="information">
  <!-- card code pasting here -->
  <section class="text-gray-600 body-font">
    <div class="container px-5 py-24 mx-auto">
      <div class="flex flex-wrap w-full mb-20">

        <div class="lg:w-1/2 w-full mb-6 lg:mb-0">
          <h1 class="sm:text-3xl text-2xl font-medium title-font mb-2 text-gray-900">Top recommended places:</h1>
          <div class="h-1 w-20 bg-blue-500 rounded"></div>
        </div>
        <p class="lg:w-1/2 w-full leading-relaxed text-gray-500">


          <!-- write something here -->
        </p>
      </div>
      <div class="flex flex-wrap -m-4">
        <% recommendations.forEach((place)=> { %>
          <div class="xl:w-1/4 md:w-1/2 p-4">
            <div class="bg-gray-100 p-6 rounded-lg">
              <img class="h-40 rounded w-full object-cover object-center mb-6" src="/images/<%=place.name%>.png"
                alt="content">
              <h3 class="tracking-widest text-blue-500 text-xs font-medium title-font">Top place</h3>
              <h2 class="text-lg text-gray-900 font-medium title-font mb-4 text-center">
                <%= place.name %>
              </h2>
              <p class="leading-relaxed text-base text-center">
              <b> Description: </b><%=place.description%>
              </p>
              <hr>

              <p class="py-2 text-gray-700 text-base text-center">
                <b>State: </b><%=place.state%>
              </p>
              <p class="py-2 text-gray-700 text-base text-center">
               <b> Days required: </b><%=place.duration%>
              </p>
              <p class="py-2 text-gray-700 text-base text-center">
                <b>Avg price:</b> <%=place.price%> Rs
              </p>
              <hr>
              <span
                class=" inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 ml-20
                 mb-2 ">
                <a class="text-end" target="_blank" href=<%= place.mapsLink %> >
                ->Get directions<-
              </a>
            </span>
          </div>
        </div>
        
        <% }); %>
      </div>
    </div>
    </div>
  </section>
  <footer class="text-gray-600 body-font">
    <div class="container px-5 py-8 mx-auto flex items-center sm:flex-row flex-col">
      <a class="flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0">
        <img src="/images/logo.PNG" alt="Your Logo" class="w-11 h-13">
        <span class="ml-3 text-xl">ParKahan</span>
      </a>
      <p class="text-sm text-gray-500 sm:ml-4 sm:pl-4 sm:border-l-2 sm:border-gray-200 sm:py-2 sm:mt-0 mt-4">
        © 2023 ParKahan —
        <a href="https://www.linkedin.com/in/mohanashiva/" class="text-gray-600 ml-1" rel="noopener noreferrer" target="_blank">@MohanaShiva</a>
      </p>
      <span class="inline-flex sm:ml-auto sm:mt-0 mt-4 justify-center sm:justify-start">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
          <path stroke-linecap="round" stroke-linejoin="round" d="M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.380a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.380-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z" />
        </svg>
        <p class="mr-3 font-bold text-gray-500">CONTACT US -></p>
        <a class="text-gray-500" href="https://www.facebook.com/profile.php?id=61553069468442">
          <svg fill="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
            <path d="M18 2h-3a5 5 0 00-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 011-1h3z"></path>
          </svg>
        </a>
        <a class="ml-3 text-gray-500" href="https://instagram.com/parkahan_?igshid=OGQ5ZDc2ODk2ZA==">
          <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" class="w-5 h-5" viewBox="0 0 24 24">
            <rect width="20" height="20" x="2" y="2" rx="5" ry="5"></rect>
            <path d="M16 11.37A4 4 0 1112.63 8 4 4 0 0116 11.37zm1.5-4.87h.01"></path>
          </svg>
        </a>
      </span>
    </div>
  </footer>
</section>




 

  <!-- <script type=" module" src="map.js" defer></script> -->

                 
                      <!-- Script to display locations and maps -->
                      <script>
                         

                        // variable created by ejs

                        var hotelnames = <%- JSON.stringify(portal) %>;
                        var locations = <%- JSON.stringify(recommendations) %>;

                          // console.log("hotelnames", hotelnames);
                          // console.log("locations", locations);


                        //Using mapbox API
                        mapboxgl.accessToken =
                          'pk.eyJ1Ijoiam9uYXNzY2htZWR0bWFubiIsImEiOiJjam54ZmM5N3gwNjAzM3dtZDNxYTVlMnd2In0.ytpI7V7w7cyT1Kq5rT9Z1A';

                        var map = new mapboxgl.Map({
                          container: 'map',
                          style: 'mapbox://styles/mapbox/light-v9',
                          zoom: 8,
                        });


                        //Creating boundaries
                        const bounds = new mapboxgl.LngLatBounds();

                        //PlaceMarker function to display arkers on map
                        const placeMarker = async () => {


                          //Loop to display cities
                          for (let loc of locations) {
                            let x, y;
                            const el = document.createElement('div');
                            el.className = 'marker';
                            // [x, y] = data[loc];
                            y = loc.longitude
                            x = loc.latitude
                            // Add marker

                            //Pop up to show the name of the location
                            const popup = new mapboxgl.Popup({
                              offset: [0, -30],
                            // }).setText(`${loc}`);
                            }).setText(`${loc.name}`);

                            //Rendering latitude and longitude location dynamically
                            new mapboxgl.Marker({
                              element: el,
                              anchor: 'bottom',
                            })
                              .setLngLat([y, x])
                              .setPopup(popup)
                              .addTo(map);
                            popup.remove();

                            bounds.extend([y, x]);
                          }
                          //change var name to small n
                          for (let loc of hotelnames) {
                            let x, y;
                            const el = document.createElement('div');
                            el.className = 'hotelMarker';

                            let aTag = document.createElement('a');
                            aTag.innerHTML = "H";
                            aTag.target = "_blank"
                            aTag.href = loc.link;
                            aTag.title = loc;
                            el.appendChild(aTag);

                            y = loc.longitude
                            x = loc.latitude
                            //[x, y] = hotelData[loc];
                            // Add marker
                            const popup = new mapboxgl.Popup({
                              offset: [0, -30],
                              //}).setText(`${loc}`);
                            }).setText(`${loc.name}`);

                            new mapboxgl.Marker({
                              element: el,
                              anchor: 'bottom',
                            })
                              .setLngLat([y, x])
                              .setPopup(popup)
                              .addTo(map);
                            popup.remove();

                            bounds.extend([y, x]);
                          }
                        };
                        const loadMap = () => {
                          placeMarker();
                          map.fitBounds(bounds, {
                            padding: 20,
                          });
                          map.scrollZoom.disable();
                          map.keyboard.disable();
                          map.touchZoomRotate.disable();
                          const nav = new mapboxgl.NavigationControl({
                            visualizePitch: true,
                          });
                          map.addControl(nav, 'bottom-right');
                        };
                        loadMap();
                      </script>
                      <script>
  
                        function scrollToBottom() {
                          window.scrollTo(0, document.body.scrollHeight);
                      }
                      
                      </script>
                      <script src="https://cdn.jsdelivr.net/npm/darkmode-js@1.3.4/lib/darkmode-js.min.js"></script>
                      <script type="text/javascript" src="/js/script.js"></script>
</body>

</html>